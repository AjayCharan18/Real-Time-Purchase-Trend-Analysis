networks:
  purchase-analytics-network:
    driver: bridge

volumes:
  hadoop-namenode-data:
  kafka-data:
  zookeeper-data:

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    networks:
      - purchase-analytics-network
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    networks:
      - purchase-analytics-network
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: "1"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_LOG_RETENTION_HOURS: "24"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    volumes:
      - kafka-data:/var/lib/kafka/data

  hadoop-namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: hadoop-namenode
    networks:
      - purchase-analytics-network
    ports:
      - "9870:9870"
      - "8020:8020"
    environment:
      CLUSTER_NAME: "purchase-analytics"
      CORE_CONF_fs_defaultFS: "hdfs://hadoop-namenode:8020"
      HDFS_CONF_dfs_replication: "1"
      HDFS_CONF_dfs_permissions_enabled: "false"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    volumes:
      - hadoop-namenode-data:/hadoop/dfs/name

  producer:
    build:
      context: ./producer
      dockerfile: Dockerfile
    container_name: kafka-producer
    networks:
      - purchase-analytics-network
    depends_on:
      - kafka
    restart: unless-stopped
    environment:
      KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
      KAFKA_TOPIC: "purchase-transactions"
      PRODUCER_DATA_MODE: "synthetic"
      PRODUCER_RATE: "20"
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
    volumes:
      - ./data:/app/data
      - ./logs/producer:/app/logs
    command: python kafka_producer.py

  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: dashboard
    networks:
      - purchase-analytics-network
    ports:
      - "5000:5000"
    depends_on:
      - hadoop-namenode
    environment:
      FLASK_APP: "app.py"
      FLASK_ENV: "development"
      HDFS_NAMENODE: "hdfs://hadoop-namenode:8020"
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
    volumes:
      - ./dashboard:/app
      - ./logs/dashboard:/app/logs
    command: [ "python", "app.py" ]
